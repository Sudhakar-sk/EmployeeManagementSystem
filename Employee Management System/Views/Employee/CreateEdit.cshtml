
@model EmployeeManagement.Core.Models.EmployeeDetails
@{
    ViewBag.Title = "CreateEdit";

}
<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/js/site.js"></script>

@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
}

<style>
    .error{
        color:red;
    }
    .log-title{
        text-align:center;
        color:#4800ff;
    }
    .Gender{
        position:relative;
    }
    #Gender-error {
        position: absolute;
        margin-left: -67px;
        margin-top: 25px;
    }
</style>
<div class="col-12 back">
    <button class="btn btn-primary btn-sm float-right add" onclick="EmployeeDashboard()">EmployeeDashboard</button>
    <div class="container col-lg-3 col-mg-3 col-mg-12">

        <div class="log-div">
            <h2 class="log-title ">Register</h2>

            <div class="log-input-fields">


                @using (Html.BeginForm("CreateEdit", "Employee", FormMethod.Post, new { @class = "agile_form", @id = "Formdetails", autocomplete = "" }))
                {
                    @Html.HiddenFor(model => model.EmployeeId)
                    <div class="form-group">
                        <label>Full Name</label>
                        <div class="log-user">

                            @Html.EditorFor(Modal => Modal.FullName, new { HtmlAttributes = new { @type = "text", @placeholder = "FullName", @class = "input form-control" } })

                        </div>
                    </div>
                    <div class="form-group">
                        <label>UserName</label>
                        <div class="log-user">

                            @Html.EditorFor(Modal => Modal.UserName, new { HtmlAttributes = new { @type = "text", @placeholder = "UserName", @class = "input form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <div class="log-user">

                            @Html.EditorFor(Modal => Modal.Email, new { HtmlAttributes = new { @type = "email", @placeholder = "Email", @class = "input form-control" } })
                        </div>
                    </div>



                    <div class="form-group">
                        <label>Department</label>
                        <div class="log-user">
                            @Html.DropDownListFor(Modal => Modal.Department, new List<SelectListItem> { new SelectListItem() { Text="---Select Department---", Value=""},
                                                   new SelectListItem { Text="IT ", Value="IT"},
                                                   new SelectListItem { Text="QA", Value="QA"},
                                                   new SelectListItem { Text="BA", Value="BA"},
                                                   new SelectListItem { Text="Programmers", Value="Programmers"},
                                                    new SelectListItem { Text="Developers", Value="Developers"},
                                           }, new { @class = "input form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Matricule</label>
                        <div class="log-user">

                            @Html.EditorFor(Modal => Modal.Matricule, new { HtmlAttributes = new { @type = "text", @placeholder = "Matricule", @class = "input form-control" } })

                        </div>
                    </div>
                    <div class="form-group">
                        <label>Address</label>
                        <div class="log-user">

                            @Html.EditorFor(Modal => Modal.Address, new { HtmlAttributes = new { @type = "text", @placeholder = "Address", @class = "input form-control" } })

                        </div>
                    </div>
                    <div class="form-group">
                        <label>PhoneNumber</label>
                        <div class="log-user">

                            @Html.EditorFor(Modal => Modal.PhoneNumber, new { HtmlAttributes = new { @type = "text", @placeholder = "PhoneNumber", @class = "input form-control",@minlength="10",@maxlenghth="10" } })
                        </div>
                    </div>
                    <div class="form-group Gender">
                        <label>Gender</label>
                        
                            @Html.RadioButtonFor(Modal => Modal.Gender, "Male")<span>Male</span>
                            @Html.RadioButtonFor(Modal => Modal.Gender, "Female")<span>Female</span></div>
                      
                        <br />
                        <div class="row" style="text-align:center">
                            <div class="btn-aligns ">
                                @if (Model.EmployeeId != 0)
                                {
                                    <button type="button" class="btn btn-success" onclick="SubmitDetails()">Update</button>

                                }
                                else
                                {
                                    <button type="button" class="btn btn-success" onclick="SubmitDetails()">Submit</button>

                                }
                                <button type="button" class="btn btn-outline-secondary"onclick="Reset()">Reset</button>
                                <button type="button" class="btn btn-danger" onclick="Cancel()">Cancel</button>
                            </div>
                        </div>
                        }
                    </div>
        </div>
    </div>
</div>

<script>
     function EmployeeDashboard()
    {
        window.location.href = "@Url.Action("EmployeeDashboard", "Employee")";
    }
      function Cancel() {
        if (confirm("Are you Sure You Want to Cancel")) {
            window.location.href = "@Url.Action("EmployeeDashboard", "Employee")";
        }
    }
 
      
    $(function () {
        if ($("#EmployeeId").val() == 0 )
        {
            $("#PhoneNumber").val("");

        }
    });

    function Reset() {
       
        $("#FullName").val("");
        $("#UserName").val("");
        $("#Email").val("");
        $("#Department").val("");
        $("#Matricule").val("");
        $("#Address").val("");
        $("#PhoneNUmber").val("");
        $("#Gender").val("");
    }
        $(function () {
      
            $("#Formdetails").validate({
            rules:
            {
                FullName:
                {
            required: true,
                },
                UserName:
                {
            required: true,
                },
                Email:
                {
            required: true,
                },
                Department:
                {
            required: true,
                },
                Matricule:
                {
            required: true,
                },
                Address:
                {
            required: true,
                },
                PhoneNumber:
                {
                   required: true,
                    minlength: 10,
                    maxlength: 10,
                },
                Gender:
                {
                required: true,
                }
            },
            messages:
            {
                FullName:
                {
            required: "FullName is Required"
                },
                UserName:
                {
            required: "Username is Required"
                },
                Email:
                {
            required: "Email is Required"
                },
                Department:
                {
            required: "Department is Required"
                },
                Matricule:
                {
            required: "Marticule is Required",
                },
                Address:
                {
            required: "Address is Required",
                },
                PhoneNumber:
                {
                    required: "PhoneNumber is Required",
                    minlength: "Enter Valid Number",
                    maxlength: "Enter Valid Number",
                },
                Gender:
                {
            required: "Gender is Required"
                }
            }
        });
        });

    function SubmitDetails() {
        debugger
        if ($("#Formdetails").valid()) {
            $("#Formdetails").submit();
        }
    }
</script>

